// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
//
//      Changes to this file will be lost if the code is regenerated.
//
//      This file was generated from this data file:
//      /Projects/gde_unity_4.5/Assets/GameDataEditor/SampleScenes/GDESetDataScene/Resources/set_data_scene.json
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDESetListData : IGDEData
    {
        static string bool_list_fieldKey = "bool_list_field";
		public List<bool>      bool_list_field;
		public void Set_bool_list_field()
        {
	        GDEDataManager.SetBoolList(_key, bool_list_fieldKey, bool_list_field);
		}
		
        static string int_list_fieldKey = "int_list_field";
		public List<int>      int_list_field;
		public void Set_int_list_field()
        {
	        GDEDataManager.SetIntList(_key, int_list_fieldKey, int_list_field);
		}
		
        static string float_list_fieldKey = "float_list_field";
		public List<float>      float_list_field;
		public void Set_float_list_field()
        {
	        GDEDataManager.SetFloatList(_key, float_list_fieldKey, float_list_field);
		}
		
        static string string_list_fieldKey = "string_list_field";
		public List<string>      string_list_field;
		public void Set_string_list_field()
        {
	        GDEDataManager.SetStringList(_key, string_list_fieldKey, string_list_field);
		}
		
        static string vector2_list_fieldKey = "vector2_list_field";
		public List<Vector2>      vector2_list_field;
		public void Set_vector2_list_field()
        {
	        GDEDataManager.SetVector2List(_key, vector2_list_fieldKey, vector2_list_field);
		}
		
        static string vector3_list_fieldKey = "vector3_list_field";
		public List<Vector3>      vector3_list_field;
		public void Set_vector3_list_field()
        {
	        GDEDataManager.SetVector3List(_key, vector3_list_fieldKey, vector3_list_field);
		}
		
        static string vector4_list_fieldKey = "vector4_list_field";
		public List<Vector4>      vector4_list_field;
		public void Set_vector4_list_field()
        {
	        GDEDataManager.SetVector4List(_key, vector4_list_fieldKey, vector4_list_field);
		}
		
        static string color_list_fieldKey = "color_list_field";
		public List<Color>      color_list_field;
		public void Set_color_list_field()
        {
	        GDEDataManager.SetColorList(_key, color_list_fieldKey, color_list_field);
		}
		

        static string custom_list_fieldKey = "custom_list_field";
		public List<GDESetCustomData>      custom_list_field;
		public void Set_custom_list_field()
        {
	        GDEDataManager.SetCustomList(_key, custom_list_fieldKey, custom_list_field);
		}
		

        public GDESetListData(string key) : base(key)
        {
            GDEDataManager.RegisterItem(this.SchemaName(), key);
        }
        public override Dictionary<string, object> SaveToDict()
		{
			var dict = new Dictionary<string, object>();
			dict.Add(GDMConstants.SchemaKey, "SetList");
			
            dict.Merge(true, bool_list_field.ToGDEDict(bool_list_fieldKey));
            dict.Merge(true, int_list_field.ToGDEDict(int_list_fieldKey));
            dict.Merge(true, float_list_field.ToGDEDict(float_list_fieldKey));
            dict.Merge(true, string_list_field.ToGDEDict(string_list_fieldKey));
            dict.Merge(true, vector2_list_field.ToGDEDict(vector2_list_fieldKey));
            dict.Merge(true, vector3_list_field.ToGDEDict(vector3_list_fieldKey));
            dict.Merge(true, vector4_list_field.ToGDEDict(vector4_list_fieldKey));
            dict.Merge(true, color_list_field.ToGDEDict(color_list_fieldKey));

            dict.Merge(true, custom_list_field.ToGDEDict(custom_list_fieldKey));
            return dict;
		}

        public override void UpdateCustomItems(bool rebuildKeyList)
        {
            if (custom_list_field != null)
            {
                for(int x=0;  x<custom_list_field.Count;  x++)
                {
                    GDEDataManager.UpdateItem(custom_list_field[x], rebuildKeyList);
                    custom_list_field[x].UpdateCustomItems(rebuildKeyList);
                }
            }
        }

        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;

			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetBoolList(bool_list_fieldKey, out bool_list_field);
                dict.TryGetIntList(int_list_fieldKey, out int_list_field);
                dict.TryGetFloatList(float_list_fieldKey, out float_list_field);
                dict.TryGetStringList(string_list_fieldKey, out string_list_field);
                dict.TryGetVector2List(vector2_list_fieldKey, out vector2_list_field);
                dict.TryGetVector3List(vector3_list_fieldKey, out vector3_list_field);
                dict.TryGetVector4List(vector4_list_fieldKey, out vector4_list_field);
                dict.TryGetColorList(color_list_fieldKey, out color_list_field);

                dict.TryGetCustomList(custom_list_fieldKey, out custom_list_field);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            bool_list_field = GDEDataManager.GetBoolList(_key, bool_list_fieldKey, bool_list_field);
            int_list_field = GDEDataManager.GetIntList(_key, int_list_fieldKey, int_list_field);
            float_list_field = GDEDataManager.GetFloatList(_key, float_list_fieldKey, float_list_field);
            string_list_field = GDEDataManager.GetStringList(_key, string_list_fieldKey, string_list_field);
            vector2_list_field = GDEDataManager.GetVector2List(_key, vector2_list_fieldKey, vector2_list_field);
            vector3_list_field = GDEDataManager.GetVector3List(_key, vector3_list_fieldKey, vector3_list_field);
            vector4_list_field = GDEDataManager.GetVector4List(_key, vector4_list_fieldKey, vector4_list_field);
            color_list_field = GDEDataManager.GetColorList(_key, color_list_fieldKey, color_list_field);

            custom_list_field = GDEDataManager.GetCustomList(_key, custom_list_fieldKey, custom_list_field);
        }

        public GDESetListData ShallowClone()
		{
			string newKey = Guid.NewGuid().ToString();
			GDESetListData newClone = new GDESetListData(newKey);

            newClone.bool_list_field = new List<bool>(bool_list_field);
			newClone.Set_bool_list_field();
            newClone.int_list_field = new List<int>(int_list_field);
			newClone.Set_int_list_field();
            newClone.float_list_field = new List<float>(float_list_field);
			newClone.Set_float_list_field();
            newClone.string_list_field = new List<string>(string_list_field);
			newClone.Set_string_list_field();
            newClone.vector2_list_field = new List<Vector2>(vector2_list_field);
			newClone.Set_vector2_list_field();
            newClone.vector3_list_field = new List<Vector3>(vector3_list_field);
			newClone.Set_vector3_list_field();
            newClone.vector4_list_field = new List<Vector4>(vector4_list_field);
			newClone.Set_vector4_list_field();
            newClone.color_list_field = new List<Color>(color_list_field);
			newClone.Set_color_list_field();

            newClone.custom_list_field = new List<GDESetCustomData>(custom_list_field);
			newClone.Set_custom_list_field();

            return newClone;
		}

        public GDESetListData DeepClone()
		{
			GDESetListData newClone = ShallowClone();
            newClone.custom_list_field = new List<GDESetCustomData>();
			if (custom_list_field != null)
			{
				foreach(var val in custom_list_field)
					newClone.custom_list_field.Add(val.DeepClone());
			}
			newClone.Set_custom_list_field();
            return newClone;
		}

        public void Reset_bool_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, bool_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetBoolList(bool_list_fieldKey, out bool_list_field);
        }
		
        public void Reset_int_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, int_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetIntList(int_list_fieldKey, out int_list_field);
        }
		
        public void Reset_float_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, float_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetFloatList(float_list_fieldKey, out float_list_field);
        }
		
        public void Reset_string_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, string_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetStringList(string_list_fieldKey, out string_list_field);
        }
		
        public void Reset_vector2_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, vector2_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetVector2List(vector2_list_fieldKey, out vector2_list_field);
        }
		
        public void Reset_vector3_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, vector3_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetVector3List(vector3_list_fieldKey, out vector3_list_field);
        }
		
        public void Reset_vector4_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, vector4_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetVector4List(vector4_list_fieldKey, out vector4_list_field);
        }
		
        public void Reset_color_list_field()
        {
	        GDEDataManager.ResetToDefault(_key, color_list_fieldKey);

	        Dictionary<string, object> dict;
	        GDEDataManager.Get(_key, out dict);
	        dict.TryGetColorList(color_list_fieldKey, out color_list_field);
        }
		

        public void Reset_custom_list_field()
		{
			GDEDataManager.ResetToDefault(_key, custom_list_fieldKey);

			Dictionary<string, object> dict;
			GDEDataManager.Get(_key, out dict);

			dict.TryGetCustomList(custom_list_fieldKey, out custom_list_field);
			custom_list_field = GDEDataManager.GetCustomList(_key, custom_list_fieldKey, custom_list_field);

			custom_list_field.ForEach(x => x.ResetAll());
		}

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, int_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, float_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, string_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, vector2_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, vector3_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, vector4_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, color_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, bool_list_fieldKey);
            GDEDataManager.ResetToDefault(_key, custom_list_fieldKey);

            Reset_custom_list_field();

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
